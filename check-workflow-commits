#!/usr/bin/env bash
# Pass in workflow yaml files as stdin, find `uses:` strings with hashes in them and checks if they exist in the claimed repo.
# Returns non-zero code on failure.
#
# Uses this undocumented endpoint: https://stackoverflow.com/questions/29992441/github-api-identify-the-branches-that-contain-a-given-commit
# https://github.com/$OWNER/$REPO/branch_commits/$COMMIT
#
# Example:
# $ ./check-workflow-commits < .github/workflows/publish.yml
# $ $? && echo "Everything is okay" || "Things are bad"

readonly bad_string="js-spoofed-commit-warning-trigger"
readonly good_string="branches-list"
readonly regex="[\'\"]?uses[\'\"]?:\s*[\'\"]?([^/]+/[^/]+@[0-9a-f]{6,})[\'\"]?"

while read -r line; do
  if [[ $line =~ $regex ]]; then
    action="${BASH_REMATCH[1]}"
    repo="$(echo "$action" | cut -d'@' -f1)"
    commit="$(echo "$action" | cut -d'@' -f2)"
    url="https://github.com/$repo/branch_commits/$commit"
    echo -n "Checking: $repo@$commit ... "

    result="$(curl --silent "$url")";
    if echo "$result" | grep -q "$bad_string"; then
      echo "❌"
      echo "Failed: Found commit that does not exist on claimed repo: $commit"
      echo "  $line"
      exit 1
    elif echo "$result" | grep -q "$good_string"; then
      echo " ✅"
    else
      echo "❓"
      echo "Failed: Commit did not load or got an unexpected result: $commit"
      echo "  $line"
      exit 2
    fi
  fi
done
